{"version":3,"sources":["components/Button/Button.jsx","components/Select/Select.jsx","components/GoodsList/GoodsList.jsx","App.jsx","index.js"],"names":["Button","innerText","action","type","className","onClick","Select","value","aria-label","onChange","selected","GoodsList","state","shouldReverse","sortBy","goods","props","minGoodLength","doReverse","setState","prevState","sortByAlphabet","sortByLength","reset","selectLength","event","target","this","goodsCopy","filter","good","length","sort","good1","good2","localeCompare","reverse","map","key","Math","random","React","Component","goodsFromServer","App","isStarted","start","ReactDOM","render","document","getElementById"],"mappings":"kPAGaA,G,MAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,OAAd,OACpB,4BACEC,KAAK,SACLC,UAAU,kBACVC,QAASH,GAERD,KCNQK,G,MAAS,SAAC,GAAD,IAAGJ,EAAH,EAAGA,OAAQK,EAAX,EAAWA,MAAX,OACpB,oCACE,4BACEH,UAAU,kCACVI,aAAW,0BACXC,SAAUP,EACVK,MAAOA,GAEP,4BAAQG,SAAS,KAAjB,KACA,4BAAQH,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,MAAd,UCdOI,EAAb,4MACEC,MAAQ,CACNC,eAAe,EACfC,OAAQ,KACRC,MAAO,EAAKC,MAAMD,MAClBE,cAAe,GALnB,EAQEC,UAAY,WACV,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BP,eAAgBO,EAAUP,mBAVhC,EAcEQ,eAAiB,WACf,EAAKF,SAAS,CAAEL,OAAQ,cAf5B,EAkBEQ,aAAe,WACb,EAAKH,SAAS,CAAEL,OAAQ,YAnB5B,EAsBES,MAAQ,WACN,EAAKJ,SAAS,CACZN,eAAe,EACfC,OAAQ,KACRG,cAAe,KA1BrB,EA8BEO,aAAe,SAACC,GACd,EAAKN,SAAS,CAAEF,cAAeQ,EAAMC,OAAOnB,SA/BhD,4CAkCE,WACE,MAKIoB,KAAKf,MAJPC,EADF,EACEA,cACAE,EAFF,EAEEA,MACAD,EAHF,EAGEA,OACAG,EAJF,EAIEA,cAEIW,EAAYb,EAAMc,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUd,KAiBtD,OAfAW,EAAUI,MAAK,SAACC,EAAOC,GACrB,OAAQpB,GACN,IAAK,WACH,OAAOmB,EAAME,cAAcD,GAC7B,IAAK,SACH,OAAOD,EAAMF,OAASG,EAAMH,OAC9B,QACE,OAAO,MAITlB,GACFe,EAAUQ,UAIV,yBAAKhC,UAAU,cACb,wBAAIA,UAAU,cACXwB,EAAUS,KAAI,SAAAP,GAAI,OACjB,wBACE1B,UAAU,uCACVkC,IAAKC,KAAKC,UAETV,OAIP,yBAAK1B,UAAU,aACb,kBAAC,EAAD,CACEH,UAAU,UACVC,OAAQyB,KAAKT,YAEf,kBAAC,EAAD,CACEjB,UAAU,sBACVC,OAAQyB,KAAKN,iBAEf,kBAAC,EAAD,CACEpB,UAAU,QACVC,OAAQyB,KAAKJ,QAEf,kBAAC,EAAD,CACEtB,UAAU,iBACVC,OAAQyB,KAAKL,gBAGjB,kBAAC,EAAD,CAAQf,MAAOU,EAAef,OAAQyB,KAAKH,oBAxFnD,GAA+BiB,IAAMC,WCD/BC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAiCaC,E,4MA7BbhC,MAAQ,CACNiC,WAAW,G,EAGbC,MAAQ,WACN,EAAK3B,UAAS,SAAAP,GAAK,MAAK,CACtBiC,WAAYjC,EAAMiC,e,4CAItB,WACE,IAAQA,EAAclB,KAAKf,MAAnBiC,UAER,OACE,yBAAKzC,UAAU,OACb,wBAAIA,UAAU,aAAd,SACCyC,EAEG,kBAAC,EAAD,CAAW9B,MAAO4B,IAGlB,kBAAC,EAAD,CAAQ1C,UAAU,QAAQC,OAAQyB,KAAKmB,a,GAtBjCL,IAAMC,WCdxBK,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.7b405e23.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ innerText, action }) => (\n  <button\n    type=\"button\"\n    className=\"btn btn-primary\"\n    onClick={action}\n  >\n    {innerText}\n  </button>\n);\n\nButton.propTypes = {\n  innerText: PropTypes.string.isRequired,\n  action: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Select = ({ action, value }) => (\n  <>\n    <select\n      className=\"form-select form-select-lg mb-3\"\n      aria-label=\".form-select-lg example\"\n      onChange={action}\n      value={value}\n    >\n      <option selected=\"1\">1</option>\n      <option value=\"2\">2</option>\n      <option value=\"3\">3</option>\n      <option value=\"4\">4</option>\n      <option value=\"5\">5</option>\n      <option value=\"6\">6</option>\n      <option value=\"7\">7</option>\n      <option value=\"8\">8</option>\n      <option value=\"9\">9</option>\n      <option value=\"10\">10</option>\n    </select>\n  </>\n);\n\nSelect.propTypes = {\n  action: PropTypes.func.isRequired,\n  value: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes, { string } from 'prop-types';\nimport './GoodsList.css';\nimport { Button } from '../Button/Button';\nimport { Select } from '../Select/Select';\n\nexport class GoodsList extends React.Component {\n  state = {\n    shouldReverse: false,\n    sortBy: null,\n    goods: this.props.goods,\n    minGoodLength: 1,\n  }\n\n  doReverse = () => {\n    this.setState(prevState => ({\n      shouldReverse: !prevState.shouldReverse,\n    }));\n  }\n\n  sortByAlphabet = () => {\n    this.setState({ sortBy: 'alphabet' });\n  }\n\n  sortByLength = () => {\n    this.setState({ sortBy: 'length' });\n  }\n\n  reset = () => {\n    this.setState({\n      shouldReverse: false,\n      sortBy: null,\n      minGoodLength: 1,\n    });\n  }\n\n  selectLength = (event) => {\n    this.setState({ minGoodLength: event.target.value });\n  }\n\n  render() {\n    const {\n      shouldReverse,\n      goods,\n      sortBy,\n      minGoodLength,\n    } = this.state;\n    const goodsCopy = goods.filter(good => good.length >= minGoodLength);\n\n    goodsCopy.sort((good1, good2) => {\n      switch (sortBy) {\n        case 'alphabet':\n          return good1.localeCompare(good2);\n        case 'length':\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (shouldReverse) {\n      goodsCopy.reverse();\n    }\n\n    return (\n      <div className=\"goods-list\">\n        <ul className=\"list-group\">\n          {goodsCopy.map(good => (\n            <li\n              className=\"list-group-item list-group-item-info\"\n              key={Math.random()}\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n        <div className=\"btn-group\">\n          <Button\n            innerText=\"Reverse\"\n            action={this.doReverse}\n          />\n          <Button\n            innerText=\"Sort alphabetically\"\n            action={this.sortByAlphabet}\n          />\n          <Button\n            innerText=\"Reset\"\n            action={this.reset}\n          />\n          <Button\n            innerText=\"Sort by length\"\n            action={this.sortByLength}\n          />\n        </div>\n        <Select value={minGoodLength} action={this.selectLength} />\n      </div>\n    );\n  }\n}\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(string).isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { Button } from './components/Button/Button';\nimport { GoodsList } from './components/GoodsList/GoodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isStarted: false,\n  }\n\n  start = () => {\n    this.setState(state => ({\n      isStarted: !state.isStarted,\n    }));\n  }\n\n  render() {\n    const { isStarted } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"display-1\">Goods</h1>\n        {isStarted\n          ? (\n            <GoodsList goods={goodsFromServer} />\n          )\n          : (\n            <Button innerText=\"Start\" action={this.start} />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}